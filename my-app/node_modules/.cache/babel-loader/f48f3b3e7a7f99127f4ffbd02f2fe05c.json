{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Modal, Button } from \"react-bootstrap\";\nimport axios from 'axios';\nexport default function GetData(size, pageNumber) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [pas, setPas] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    axios({\n      method: 'GET',\n      url: 'https://api.instantwebtools.net/v1/passenger?page=' + String(pageNumber) + '&size=' + String(size)\n    }).then(res => {\n      setPas(prevPas => {\n        return [...new Set([...prevPas, ...res.data.data.map(x => {\n          return {\n            \"_id\": x._id,\n            \"name\": x.name,\n            \"id\": x.airline.id,\n            \"airName\": x.airline.name,\n            \"country\": x.airline.country,\n            \"logo\": x.airline.logo\n          };\n        })])];\n      });\n      setHasMore(res.data.data.length > 0);\n      setLoading(false);\n    }).catch(e => {\n      setError(true);\n      console.log(e);\n    });\n  }, [size, pageNumber]);\n  console.log(pas);\n  return {\n    loading,\n    error,\n    pas,\n    hasMore\n  };\n}\n\n_s(GetData, \"t0bJIpOf6gjULN8e6hmR4x8G1R4=\");\n\n_c = GetData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetData\");","map":{"version":3,"sources":["X:/Barood/Assignment_EMPG/my-app/src/Modl.js"],"names":["useEffect","useState","Modal","Button","axios","GetData","size","pageNumber","loading","setLoading","error","setError","pas","setPas","hasMore","setHasMore","method","url","String","then","res","prevPas","Set","data","map","x","_id","name","airline","id","country","logo","length","catch","e","console","log"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,UAAvB,EAAmC;AAAA;;AAE9C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAP,IAAAA,KAAK,CAAC;AACFY,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAE,uDAAqDC,MAAM,CAACX,UAAD,CAA3D,GAAwE,QAAxE,GAAiFW,MAAM,CAACZ,IAAD;AAF1F,KAAD,CAAL,CAGGa,IAHH,CAGQC,GAAG,IAAI;AACXP,MAAAA,MAAM,CAACQ,OAAO,IAAI;AACd,eAAO,CAAC,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGD,OAAJ,EAAY,GAAGD,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcC,GAAd,CAAkBC,CAAC,IAAI;AAAC,iBAAO;AAAC,mBAAMA,CAAC,CAACC,GAAT;AAAc,oBAAOD,CAAC,CAACE,IAAvB;AAA6B,kBAAKF,CAAC,CAACG,OAAF,CAAUC,EAA5C;AAAgD,uBAAUJ,CAAC,CAACG,OAAF,CAAUD,IAApE;AAA0E,uBAAUF,CAAC,CAACG,OAAF,CAAUE,OAA9F;AAAuG,oBAAOL,CAAC,CAACG,OAAF,CAAUG;AAAxH,WAAP;AAAqI,SAA7J,CAAf,CAAR,CAAJ,CAAP;AACH,OAFK,CAAN;AAGAhB,MAAAA,UAAU,CAACK,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcS,MAAd,GAAuB,CAAxB,CAAV;AACAvB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KATD,EASGwB,KATH,CASSC,CAAC,IAAI;AACVvB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAwB,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KAZD;AAaH,GAhBQ,EAgBN,CAAC5B,IAAD,EAAOC,UAAP,CAhBM,CAAT;AAiBA4B,EAAAA,OAAO,CAACC,GAAR,CAAYxB,GAAZ;AACA,SAAO;AAACJ,IAAAA,OAAD;AAAUE,IAAAA,KAAV;AAAiBE,IAAAA,GAAjB;AAAsBE,IAAAA;AAAtB,GAAP;AACH;;GA1BuBT,O;;KAAAA,O","sourcesContent":["import {useEffect, useState} from 'react'\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport axios from 'axios'\r\n\r\nexport default function GetData(size, pageNumber) {\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n    const [pas, setPas] = useState([])\r\n    const [hasMore, setHasMore] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setError(false)\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://api.instantwebtools.net/v1/passenger?page='+String(pageNumber)+'&size='+String(size)\r\n        }).then(res => {\r\n            setPas(prevPas => {\r\n                return [...new Set([...prevPas,...res.data.data.map(x => {return {\"_id\":x._id, \"name\":x.name, \"id\":x.airline.id, \"airName\":x.airline.name, \"country\":x.airline.country, \"logo\":x.airline.logo}} )])]\r\n            })\r\n            setHasMore(res.data.data.length > 0)\r\n            setLoading(false)\r\n        }).catch(e => {\r\n            setError(true)\r\n            console.log(e)\r\n        })\r\n    }, [size, pageNumber])\r\n    console.log(pas)\r\n    return {loading, error, pas, hasMore}\r\n}"]},"metadata":{},"sourceType":"module"}